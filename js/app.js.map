{"version":3,"sources":["app/js/initialize.js","app/js/routes/common.js","app/js/routes/home.js","app/js/util/camelCase.js","app/js/util/router.js"],"names":["routes","Router","common","home","document","addEventListener","loadEvents","init","finalize","str","charAt","toLowerCase","replace","split","map","part","toUpperCase","slice","join","route","event","arg","fire","body","className","camelCase","forEach"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AAEA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,SAAS,IAAIC,gBAAJ,CAAW;AACtBC,4BADsB;AAEtBC;AAFsB,CAAX,CAAf;;AAKA;AACAC,SAASC,gBAAT,CAA0B,kBAA1B,EAA8C;AAAA,WAAML,OAAOM,UAAP,EAAN;AAAA,CAA9C;;;;;;;;;kBCZe;AACXC,QADW,kBACJ;AACH;AACH,KAHU;AAIXC,YAJW,sBAIA;AACP;AACH;AANU,C;;;;;;;;;kBCAA;AACXD,QADW,kBACJ;AACH;AACH,KAHU;AAIXC,YAJW,sBAIA;AACP;AACH;AANU,C;;;;;;;;;;ACDf;;;;;kBAKe;AAAA,cAAUC,IAAIC,MAAJ,CAAW,CAAX,EAAcC,WAAd,EAAV,GAAwCF,IAAIG,OAAJ,CAAY,QAAZ,EAAsB,GAAtB,EAA2BC,KAA3B,CAAiC,GAAjC,EAClDC,GADkD,CAC9C;AAAA,gBAAWC,KAAKL,MAAL,CAAY,CAAZ,EAAeM,WAAf,EAAX,GAA0CD,KAAKE,KAAL,CAAW,CAAX,CAA1C;AAAA,GAD8C,EAElDC,IAFkD,CAE7C,EAF6C,EAGlDD,KAHkD,CAG5C,CAH4C,CAAxC;AAAA,C;;;;;;;;;;;;ACLf;;;;;;;;AAEA;;;;;;;;IAQMhB,M;;AAEF;;;;AAIA,oBAAYD,MAAZ,EAAoB;AAAA;;AAChB,aAAKA,MAAL,GAAcA,MAAd;AACH;;AAED;;;;;;;;;;6BAMKmB,K,EAA4B;AAAA,gBAArBC,KAAqB,uEAAb,MAAa;AAAA,gBAALC,GAAK;;AAC7B,gBAAMC,OAAOH,UAAU,EAAV,IAAgB,KAAKnB,MAAL,CAAYmB,KAAZ,CAAhB,IAAsC,OAAO,KAAKnB,MAAL,CAAYmB,KAAZ,EAAmBC,KAAnB,CAAP,KAAqC,UAAxF;AACA,gBAAIE,IAAJ,EAAU;AACN,qBAAKtB,MAAL,CAAYmB,KAAZ,EAAmBC,KAAnB,EAA0BC,GAA1B;AACH;AACJ;;AAED;;;;;;;;;;;;qCASa;AAAA;;AACT;AACA,iBAAKC,IAAL,CAAU,QAAV;;AAEA;AACAlB,qBAASmB,IAAT,CAAcC,SAAd,CACKb,WADL,GAEKC,OAFL,CAEa,IAFb,EAEmB,GAFnB,EAGKC,KAHL,CAGW,KAHX,EAIKC,GAJL,CAISW,mBAJT,EAKKC,OALL,CAKa,UAACF,SAAD,EAAe;AACpB,sBAAKF,IAAL,CAAUE,SAAV;AACA,sBAAKF,IAAL,CAAUE,SAAV,EAAqB,UAArB;AACH,aARL;;AAUA;AACA,iBAAKF,IAAL,CAAU,QAAV,EAAoB,UAApB;AACH;;;;;;kBAGUrB,M","file":"public/js/app.js","sourcesContent":["\n\"use strict\";\n\nimport Router from './util/router';\nimport common from './routes/common';\nimport home from './routes/home';\n\nconst routes = new Router({\n    common,\n    home,\n});\n\n// Load Events\ndocument.addEventListener('DOMContentLoaded', () => routes.loadEvents());\n","\nexport default {\n    init() {\n        // JavaScript to be fired on all pages\n    },\n    finalize() {\n        // JavaScript to be fired on all pages, after page specific JS is fired\n    },\n};\n","\nexport default {\n    init() {\n        // JavaScript to be on the home page\n    },\n    finalize() {\n        // JavaScript to be fired on the home pages, after init\n    },\n};\n","/**\n * the most terrible camelizer on the internet, guaranteed!\n * @param {string} str String that isn't camel-case, e.g., CAMeL_CaSEiS-harD\n * @return {string} String converted to camel-case, e.g., camelCaseIsHard\n */\nexport default str => `${str.charAt(0).toLowerCase()}${str.replace(/[\\W_]/g, '|').split('|')\n    .map(part => `${part.charAt(0).toUpperCase()}${part.slice(1)}`)\n    .join('')\n    .slice(1)}`;\n","import camelCase from './camelCase';\n\n/**\n * DOM-based Routing\n *\n * Based on {@link http://goo.gl/EUTi53|Markup-based Unobtrusive Comprehensive DOM-ready Execution} by Paul Irish\n *\n * The routing fires all common scripts, followed by the page specific scripts.\n * Add additional events for more control over timing\n */\nclass Router {\n\n    /**\n     * Create a new Router\n     * @param {Object} routes\n     */\n    constructor(routes) {\n        this.routes = routes;\n    }\n\n    /**\n     * Fire Router events\n     * @param {string} route DOM-based route derived from body classes (`<body class=\"...\">`)\n     * @param {string} [event] Events on the route. By default, `init` and `finalize` events are called.\n     * @param {string} [arg] Any custom argument to be passed to the event.\n     */\n    fire(route, event = 'init', arg) {\n        const fire = route !== '' && this.routes[route] && typeof this.routes[route][event] === 'function';\n        if (fire) {\n            this.routes[route][event](arg);\n        }\n    }\n\n    /**\n     * Automatically load and fire Router events\n     *\n     * Events are fired in the following order:\n     *  * common init\n     *  * page-specific init\n     *  * page-specific finalize\n     *  * common finalize\n     */\n    loadEvents() {\n        // Fire common init JS\n        this.fire('common');\n\n        // Fire page-specific init JS, and then finalize JS\n        document.body.className\n            .toLowerCase()\n            .replace(/-/g, '_')\n            .split(/\\s+/)\n            .map(camelCase)\n            .forEach((className) => {\n                this.fire(className);\n                this.fire(className, 'finalize');\n            });\n\n        // Fire common finalize JS\n        this.fire('common', 'finalize');\n    }\n}\n\nexport default Router\n"]}